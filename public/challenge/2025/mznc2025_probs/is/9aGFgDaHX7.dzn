
domSetOfBlockInFunction = array1d(allBlocksInFunction, [{0}]);

execFrequencyOfBlockInFunction = array1d(allBlocksInFunction, [16384]);

defEdgesForBlockInFunction = array1d(allBlocksInFunction, [{}]);

entryBlockOfFunction = 0;

funLocDomain = [|1, 1, 33, |0, 1, 33, |];

numBlocksInFunction = 1;

numDataInFunction = 16;

numOperationsInFunction = 14;

statesInFunction = [];

inBlock = [|0, 0, |1, 0, |2, 0, |19, 0, |];

inBlockSucc = [| |];

locDomain = [|11, 7, 0, 31, |11, 10, 0, 31, |11, 3, 1, 31, |12, 11, 0, 31, |12, 9, 0, 31, |12, 4, 1, 31, |13, 7, 0, 31, |13, 10, 0, 31, |13, 3, 1, 31, |14, 11, 0, 31, |14, 9, 0, 31, |14, 4, 1, 31, |15, 12, 0, 31, |15, 14, 0, 31, |15, 6, 1, 31, |16, 12, 0, 31, |16, 14, 0, 31, |16, 6, 1, 31, |17, 13, 0, 31, |17, 8, 0, 31, |17, 5, 32, 32, |18, 7, 0, 31, |18, 3, 1, 31, |19, 15, 31, 31, |20, 0, 32, 32, |20, 7, 1, 31, |21, 1, 32, 32, |21, 8, 1, 31, |22, 1, 32, 32, |22, 9, 1, 31, |23, 3, 32, 32, |23, 11, 1, 31, |24, 4, 32, 32, |24, 12, 1, 31, |25, 4, 32, 32, |25, 13, 1, 31, |26, 5, 32, 32, |26, 14, 1, 31, |27, 6, 32, 32, |27, 15, 1, 31, |28, 0, 33, 33, |28, 7, 1, 31, |29, 1, 33, 33, |29, 8, 1, 31, |30, 1, 33, 33, |30, 9, 1, 31, |31, 3, 33, 33, |31, 11, 1, 31, |32, 4, 33, 33, |32, 12, 1, 31, |33, 4, 33, 33, |33, 13, 1, 31, |34, 5, 33, 33, |34, 14, 1, 31, |35, 6, 33, 33, |35, 15, 1, 31, |36, 0, 0, 31, |36, 7, 1, 31, |37, 1, 0, 31, |37, 8, 1, 31, |38, 1, 0, 31, |38, 9, 1, 31, |39, 3, 0, 31, |39, 11, 1, 31, |40, 4, 0, 31, |40, 12, 1, 31, |41, 4, 0, 31, |41, 13, 1, 31, |42, 5, 0, 31, |42, 14, 1, 31, |43, 6, 0, 31, |43, 15, 1, 31, |44, 10, 1, 31, |45, 10, 1, 31, |];

applyDefDomUseConstraintForMatch = array1d(allMatches, [true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);

codeSizeOfMatch = array1d(allMatches, [0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8]);

consumedBlocksInMatch = array1d(allMatches, [{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}]);

dataDefinedByMatch = array1d(allMatches, [{0},{1},{2},{7},{8},{9},{11},{12},{13},{14},{15},{3},{4},{3},{4},{6},{6},{5},{3,10},{},{7},{8},{9},{11},{12},{13},{14},{15},{7},{8},{9},{11},{12},{13},{14},{15},{7},{8},{9},{11},{12},{13},{14},{15},{10},{10}]);

dataUsedByMatch = array1d(allMatches, [{},{},{},{0},{1},{1},{3},{4},{4},{5},{6},{7,10},{11,9},{7,10},{11,9},{12,14},{12,14},{13,8},{7,2,10},{15},{0},{1},{1},{3},{4},{4},{5},{6},{0},{1},{1},{3},{4},{4},{5},{6},{0},{1},{1},{3},{4},{4},{5},{6},{2},{2}]);

entryBlockOfMatch = array1d(allMatches, [{0},{0},{0},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{0},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}]);

latencyOfMatch = array1d(allMatches, [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,38,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2]);

nonCopyMatches = {0,1,2,11,12,13,14,15,16,17,18,19};

operationsCoveredByMatch = array1d(allMatches, [{},{},{},{5},{6},{7},{9},{10},{11},{12},{13},{0},{1},{0},{1},{3},{3},{2},{0,8},{4},{5},{6},{7},{9},{10},{11},{12},{13},{5},{6},{7},{9},{10},{11},{12},{13},{5},{6},{7},{9},{10},{11},{12},{13},{8},{8}]);

spannedBlocksInMatch = array1d(allMatches, [{0},{0},{0},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{0},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}]);

numLocations = 34;

numMatches = 46;

sameLoc = [|3, 0, 7, |4, 1, 8, |5, 1, 9, |6, 3, 11, |7, 4, 12, |8, 4, 13, |9, 5, 14, |10, 6, 15, |];

