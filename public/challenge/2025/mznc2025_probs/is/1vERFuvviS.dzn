
domSetOfBlockInFunction = array1d(allBlocksInFunction, [{0},{1,0},{2,3,0},{3,0},{4,0}]);

execFrequencyOfBlockInFunction = array1d(allBlocksInFunction, [16384,16384,8192,16384,16384]);

defEdgesForBlockInFunction = array1d(allBlocksInFunction, [{32},{14},{31},{},{}]);

entryBlockOfFunction = 0;

funLocDomain = [|1, 1, 33, |0, 1, 33, |];

numBlocksInFunction = 5;

numDataInFunction = 35;

numOperationsInFunction = 34;

statesInFunction = [];

inBlock = [|4, 0, |5, 0, |6, 0, |7, 0, |8, 0, |9, 0, |36, 2, |37, 3, |38, 4, |39, 1, |];

inBlockSucc = [|1, 2, 1, |2, 3, 2, |3, 4, 1, |34, 0, 3, |35, 0, 4, |];

locDomain = [|24, 26, 0, 31, |24, 27, 0, 31, |24, 9, 1, 31, |25, 26, 0, 31, |25, 27, 0, 31, |25, 9, 1, 31, |26, 28, 0, 31, |26, 29, 0, 31, |26, 11, 1, 31, |27, 24, 0, 31, |27, 25, 0, 31, |27, 7, 1, 31, |28, 20, 0, 31, |28, 22, 0, 31, |28, 4, 1, 31, |29, 26, 0, 31, |29, 9, 1, 31, |30, 26, 0, 31, |30, 9, 1, 31, |31, 18, 1, 31, |31, 19, 1, 31, |31, 2, 1, 31, |32, 16, 1, 31, |32, 21, 1, 31, |32, 3, 1, 31, |33, 28, 0, 31, |33, 11, 1, 31, |39, 33, 31, 31, |40, 5, 32, 32, |40, 24, 1, 31, |41, 6, 32, 32, |41, 25, 1, 31, |42, 7, 32, 32, |42, 26, 1, 31, |43, 9, 32, 32, |43, 28, 1, 31, |44, 11, 32, 32, |44, 30, 1, 31, |45, 5, 33, 33, |45, 24, 1, 31, |46, 6, 33, 33, |46, 25, 1, 31, |47, 7, 33, 33, |47, 26, 1, 31, |48, 9, 33, 33, |48, 28, 1, 31, |49, 11, 33, 33, |49, 30, 1, 31, |50, 5, 0, 31, |50, 24, 1, 31, |51, 6, 0, 31, |51, 25, 1, 31, |52, 7, 0, 31, |52, 26, 1, 31, |53, 9, 0, 31, |53, 28, 1, 31, |54, 11, 0, 31, |54, 30, 1, 31, |55, 19, 1, 31, |56, 21, 1, 31, |57, 32, 1, 31, |58, 27, 1, 31, |59, 29, 1, 31, |60, 19, 1, 31, |61, 21, 1, 31, |62, 32, 1, 31, |63, 27, 1, 31, |64, 29, 1, 31, |65, 17, 0, 31, |65, 5, 1, 31, |66, 15, 0, 31, |66, 6, 1, 31, |67, 30, 0, 31, |67, 12, 1, 31, |];

applyDefDomUseConstraintForMatch = array1d(allMatches, [false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);

codeSizeOfMatch = array1d(allMatches, [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,12,12,4,4,4,4,4,4,12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,0,0,0]);

consumedBlocksInMatch = array1d(allMatches, [{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}]);

dataDefinedByMatch = array1d(allMatches, [{14},{},{},{},{34},{0},{1},{8},{10},{13},{20},{22},{23},{15},{16},{17},{18},{31},{33},{24},{25},{26},{28},{30},{9},{9},{11},{7},{4},{9,27},{9,27},{2},{3},{11,29},{},{},{},{},{},{},{24},{25},{26},{28},{30},{24},{25},{26},{28},{30},{24},{25},{26},{28},{30},{19},{21},{32},{27},{29},{19},{21},{32},{27},{29},{5},{6},{12}]);

dataUsedByMatch = array1d(allMatches, [{31,32},{},{},{},{},{},{},{},{},{},{2},{3},{4},{0},{0},{1},{1},{12},{14},{5},{6},{7},{9},{11},{26,27},{26,27},{28,29},{24,25},{20,22},{26,8,27},{26,8,27},{18,19},{16,21},{28,10,29},{23},{23},{},{},{},{33},{5},{6},{7},{9},{11},{5},{6},{7},{9},{11},{5},{6},{7},{9},{11},{34},{34},{13},{8},{10},{34},{34},{13},{8},{10},{17},{15},{30}]);

entryBlockOfMatch = array1d(allMatches, [{},{2},{3},{4},{0},{0},{0},{0},{0},{0},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{0},{0},{2},{3},{4},{1},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}]);

latencyOfMatch = array1d(allMatches, [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,17,1,1,1,3,3,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,0,0,0]);

nonCopyMatches = {0,1,2,3,4,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,65,66,67};

operationsCoveredByMatch = array1d(allMatches, [{9},{11},{32},{33},{},{},{},{},{},{},{18},{20},{21},{13},{14},{15},{16},{29},{31},{22},{23},{24},{26},{28},{6},{6},{7},{5},{2},{6,25},{6,25},{0},{1},{7,27},{10},{10},{11},{32},{33},{12},{22},{23},{24},{26},{28},{22},{23},{24},{26},{28},{22},{23},{24},{26},{28},{17},{19},{30},{25},{27},{17},{19},{30},{25},{27},{3},{4},{8}]);

spannedBlocksInMatch = array1d(allMatches, [{},{2,1},{3,2},{4,1},{0},{0},{0},{0},{0},{0},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{0,4,3},{0,4,3},{2,1},{3,2},{4,1},{1},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}]);

numLocations = 34;

numMatches = 68;

sameLoc = [|0, 31, 32, |0, 32, 14, |10, 2, 20, |11, 3, 22, |12, 4, 23, |13, 0, 15, |14, 0, 16, |15, 1, 17, |16, 1, 18, |17, 12, 31, |18, 14, 33, |19, 5, 24, |20, 6, 25, |21, 7, 26, |22, 9, 28, |23, 11, 30, |];

