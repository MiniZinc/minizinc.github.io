export const probs = {
  accap: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['diffn'],
  },
  amaze: {
    type: 'puzzle',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['count'],
  },
  amaze2: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  amaze3: {
    type: 'puzzle',
    kind: 'sat',
    rc: true,
    sbc: false,
    globals: ['count'],
  },
  'arithmetic-target': {
    type: 'puzzle',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['all_different_except_0', 'count'],
  },
  atsp: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  bacp: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'black-hole': {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['inverse', 'table'],
  },
  'blocks-world': {
    type: 'puzzle',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['global_cardinality_closed', 'increasing'],
  },
  'bnn-planner': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'cable-tree-wiring': {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['all_different'],
  },
  cargo: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative', 'diffn'],
  },
  'carpet-cutting': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['cumulative', 'diffn'],
  },
  celar: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  chessboard: {
    type: 'puzzle',
    kind: 'max',
    rc: true,
    sbc: true,
    globals: ['global_cardinality', 'lex_lesseq'],
  },
  'city-position': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: [],
  },
  'code-generator': {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: true,
    globals: [
      'all_different',
      'cumulative',
      'decreasing',
      'diffn',
      'diffn_nonstrict',
      'maximum',
      'minimum',
      'table',
      'value_precede_chain',
    ],
  },
  'collaborative-construction': {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: [],
  },
  'concert-hall-cap': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: true,
    globals: ['all_different_except_0', 'value_precede_chain'],
  },
  costas_array: {
    type: 'combi',
    kind: 'sat',
    rc: true,
    sbc: true,
    globals: ['all_different'],
  },
  crosswords: {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  cryptanalysis: {
    type: 'real',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'community-detection': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['value_precede_chain', 'global_cardinality_low_up'],
  },
  'community-detection-rnd': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: true,
    globals: ['seq_precede_chain', 'global_cardinality_low_up'],
  },
  cvrp: {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['circuit'],
  },
  'cyclic-rcpsp': {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  debruijn_binary: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['all_different', 'global_cardinality'],
  },
  depot_placement: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['all_different'],
  },
  'diameterc-mst': {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: true,
    globals: [],
  },
  elitserien: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [
      'all_different',
      'global_cardinality_closed',
      'inverse',
      'member',
      'regular',
    ],
  },
  'evm-super-compilation': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['global_cardinality_low_up'],
  },
  'fast-food': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  fillomino: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  filters: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['diffn', 'maximum'],
  },
  fjsp: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'flowshop-workers': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: [],
  },
  'fox-geese-corn': {
    type: 'puzzle',
    kind: 'max',
    rc: true,
    sbc: false,
    globals: [],
  },
  freepizza: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  gametes: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['all_different_except_0', 'count', 'increasing'],
  },
  gbac: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['bin_packing_load', 'global_cardinality_low_up_closed'],
  },
  'generalized-peacable-queens': {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: true,
    globals: [
      'all_equal',
      'global_cardinality',
      'lex_lesseq',
      'regular',
      'value_precede_chain',
    ],
  },
  'gfd-schedule': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['nvalue', 'at_most'],
  },
  'gfd-schedule2': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['at_most', 'cumulative', 'nvalue'],
  },
  ghoulomb: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'grid-colouring': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  groupsplitter: {
    type: 'combi',
    kind: 'max',
    rc: true,
    sbc: true,
    globals: ['count', 'table'],
  },
  'hoist-benchmark': {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: [],
  },
  hrc: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  is: {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['circuit', 'table'],
  },
  'java-auto-gen': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different', 'element'],
  },
  'java-routing': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different', 'element'],
  },
  'jp-encoding': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['count'],
  },
  'kidney-exchange': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: true,
    globals: ['all_different', 'bin_packing', 'seq_precede_chain'],
  },
  l2p: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  largescheduling: {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['cumulative'],
  },
  league: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['count'],
  },
  'league-2013': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['count'],
  },
  'liner-sf-repositioning': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different', 'all_different_except_0'],
  },
  'lot-sizing': {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: true,
    globals: ['all_different', 'at_least', 'at_most', 'global_cardinality'],
  },
  mapping: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['bin_packing_load', 'count', 'maximum', 'network_flow_cost'],
  },
  mario: {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['subcircuit'],
  },
  'maximum-dag': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  'ma-path-finding': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'median-string': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'minimal-decision-sets': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  monomatch: {
    type: '',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  mqueens: {
    type: 'puzzle',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['lex_lesseq'],
  },
  mrcpsp: {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['cumulative', 'element'],
  },
  mspsp: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'multi-agent-graph-coverage': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  'multi-knapsack': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['knapsack'],
  },
  MZNC_connect: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  neighbours: {
    type: 'puzzle',
    kind: 'max',
    rc: true,
    sbc: true,
    globals: ['lex_lesseq'],
  },
  nfc: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['network_flow_cost'],
  },
  nmseq: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  nonogram: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['regular'],
  },
  nside: {
    type: 'real',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['cumulative', 'global_cardinality_low_up'],
  },
  opd: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['lex_greatereq'],
  },
  'on-call-rostering': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['count'],
  },
  oocsp_racks: {
    type: 'real',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['global_cardinality', 'increasing'],
  },
  open_stacks: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  openshop: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'opt-cryptanalysis': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['table'],
  },
  p1f: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['all_different', 'inverse', 'lex_less'],
  },
  'p1f-pjs': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['all_different', 'circuit', 'inverse', 'lex_less'],
  },
  'parity-learning': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'pattern-set-mining': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['lex_less'],
  },
  peacable_queens: {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['count', 'regular', 'value_precede'],
  },
  'pennies-opt': {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: true,
    globals: ['all_different', 'decreasing'],
  },
  pentominoes: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['regular'],
  },
  'pentominoes-zayenz': {
    type: '',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['regular'],
  },
  perfect_square: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'physician-scheduling': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['global_cardinality_low_up', 'nvalue'],
  },
  'pillars-and-planks': {
    type: 'puzzle',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['diffn'],
  },
  'prize-collecting': {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  'project-planning': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  prop_stress: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  proteindesign12: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['table'],
  },
  ptv: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['count'],
  },
  quasigroup7: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  racp: {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['cumulative'],
  },
  radiation: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  rcpsp: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  rcpsp_max: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'rcpsp-wet': {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['cumulative'],
  },
  'rcpsp-wet-diverse': {
    type: 'combi',
    kind: 'max',
    rc: true,
    sbc: false,
    globals: ['cumulative'],
  },
  'rectangle-packing': {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'rectangle-packing-2014': {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['cumulative', 'diffn'],
  },
  rel2onto: {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['all_different'],
  },
  road_construction: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  roster: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['at_least', 'at_most', 'exactly'],
  },
  'roster-shifts-bool': {
    type: 'combi',
    kind: 'max',
    rc: true,
    sbc: true,
    globals: [],
  },
  'roster-sickness': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'rotating-workforce': {
    type: 'real',
    kind: 'sat',
    rc: true,
    sbc: true,
    globals: ['global_cardinality_low_up', 'regular'],
  },
  'rotating-workforce-scheduling': {
    type: 'real',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['global_cardinality_low_up', 'regular', 'sliding_sum'],
  },
  'routing-flexible': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  rubik: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  search_stress: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  search_stress2: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'seat-moving': {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['all_different', 'all_different_except_0'],
  },
  'sdn-chain': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'ship-schedule': {
    type: 'real',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  shortest_path: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  skill_allocation: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  slow_convergence: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  smelt: {
    type: 'puzzle',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['cumulative'],
  },
  'soccer-computational': {
    type: 'real',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  solbat: {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'speck-optimisation': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_equal'],
  },
  spot5: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['table'],
  },
  'stable-goods': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  'stack-cuttingstock': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['cumulative'],
  },
  steelmillslab: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['bin_packing_load'],
  },
  'steiner-systems': {
    type: 'combi',
    kind: 'sat',
    rc: false,
    sbc: true,
    globals: [],
  },
  'steiner-tree': {
    type: 'combi',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: [],
  },
  still_life: {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  'still-life-wastage': {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  'stochastic-fjsp': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'stochastic-vrp': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['circuit'],
  },
  stripboard: {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: true,
    globals: ['all_different', 'diffn', 'disjunctive', 'strictly_decreasing'],
  },
  sudoku_fixed: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  sudoku_opt: {
    type: 'puzzle',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different'],
  },
  sugiyama: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'table-layout': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'tc-graph-color': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  tdtsp: {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['inverse'],
  },
  'team-assignment': {
    type: 'real',
    kind: 'max',
    rc: true,
    sbc: true,
    globals: ['all_different', 'bin_packing', 'bin_packing_load'],
  },
  'test-scheduling': {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: true,
    globals: ['cumulative', 'disjunctive', 'value_precede_chain'],
  },
  tower: {
    type: 'real',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['argmax'],
  },
  tpp: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['subcircuit'],
  },
  train: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'travelling-thief': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['all_different', 'inverse'],
  },
  'traveling-tppv': {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: ['all_different', 'regular'],
  },
  triangular: {
    type: 'puzzle',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: ['inverse'],
  },
  trucking: {
    type: 'combi',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'unit-commitment': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  vaccine: {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: true,
    globals: ['global_cardinality_low_up', 'lex_lesseq'],
  },
  'valve-network': {
    type: 'combi',
    kind: 'max',
    rc: false,
    sbc: false,
    globals: [],
  },
  'vrp-fs': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'vrp-submission': {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: false,
    globals: ['circuit'],
  },
  vrp: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  vrplc: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: true,
    globals: ['circuit', 'cumulative'],
  },
  whirlpool: {
    type: 'puzzle',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'wmsmc-int': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  wordpress: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  wwtp_random: {
    type: 'real',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  wwtp_real: {
    type: 'real',
    kind: 'sat',
    rc: false,
    sbc: false,
    globals: [],
  },
  'yumi-dynamic': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [
      'all_equal',
      'all_different',
      'circuit',
      'cumulative',
      'diffn',
      'increasing',
      'table',
      'value_precede',
      'value_precede_chain',
    ],
  },
  'yumi-static': {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [
      'all_equal',
      'all_different',
      'circuit',
      'cumulative',
      'diffn',
      'increasing',
      'table',
      'value_precede',
      'value_precede_chain',
    ],
  },
  zephyrus: {
    type: 'real',
    kind: 'min',
    rc: false,
    sbc: false,
    globals: [],
  },
  'zephyrus-2016': {
    type: 'real',
    kind: 'min',
    rc: true,
    sbc: true,
    globals: ['lex_greatereq', 'lex_less'],
  },
}

export const years = {
  2008: [
    'debruijn_binary',
    'nmseq',
    'pentominoes',
    'quasigroup7',
    'radiation',
    'rcpsp',
    'search_stress',
    'shortest_path',
    'slow_convergence',
    'trucking',
  ],
  2009: [
    'black-hole',
    'fillomino',
    'nonogram',
    'open_stacks',
    'p1f',
    'prop_stress',
    'rectangle-packing',
    'roster',
    'search_stress2',
    'still_life',
    'vrp',
  ],
  2010: [
    'bacp',
    'costas_array',
    'depot_placement',
    'filters',
    'ghoulomb',
    'grid-colouring',
    'rcpsp_max',
    'solbat',
    'sugiyama',
    'wwtp_random',
    'wwtp_real',
  ],
  2011: [
    'bacp',
    'black-hole',
    'carpet-cutting',
    'costas_array',
    'cyclic-rcpsp',
    'depot_placement',
    'fast-food',
    'fillomino',
    'grid-colouring',
    'nonogram',
    'open_stacks',
    'pattern-set-mining',
    'pentominoes',
    'prize-collecting',
    'roster',
    'ship-schedule',
    'solbat',
    'table-layout',
    'vrp',
    'wwtp_real',
  ],
  2012: [
    'amaze',
    'amaze2',
    'carpet-cutting',
    'fast-food',
    'filters',
    'league',
    'mspsp',
    'nonogram',
    'parity-learning',
    'pattern-set-mining',
    'project-planning',
    'radiation',
    'ship-schedule',
    'solbat',
    'still-life-wastage',
    'tpp',
    'train',
    'vrp',
  ],
  2013: [
    'black-hole',
    'cargo',
    'celar',
    'filters',
    'fjsp',
    'ghoulomb',
    'java-routing',
    'l2p',
    'league-2013',
    'mario',
    'nmseq',
    'nonogram',
    'on-call-rostering',
    'pattern-set-mining',
    'pentominoes',
    'proteindesign12',
    'radiation',
    'rcpsp',
    'rubik',
    'vrp',
  ],
  2014: [
    'amaze3',
    'cyclic-rcpsp',
    'elitserien',
    'fillomino',
    'jp-encoding',
    'liner-sf-repositioning',
    'mario',
    'mqueens',
    'multi-knapsack',
    'openshop',
    'rectangle-packing-2014',
    'road_construction',
    'ship-schedule',
    'smelt',
    'solbat',
    'spot5',
    'stochastic-fjsp',
    'stochastic-vrp',
    'train',
    'traveling-tppv',
  ],
  2015: [
    'costas_array',
    'cvrp',
    'freepizza',
    'gfd-schedule',
    'grid-colouring',
    'is',
    'largescheduling',
    'mapping',
    'multi-knapsack',
    'nmseq',
    'opd',
    'open_stacks',
    'p1f',
    'project-planning',
    'radiation',
    'roster',
    'spot5',
    'tdtsp',
    'triangular',
    'zephyrus',
  ],
  2016: [
    'carpet-cutting',
    'celar',
    'cryptanalysis',
    'depot_placement',
    'diameterc-mst',
    'elitserien',
    'filters',
    'gbac',
    'gfd-schedule2',
    'java-auto-gen',
    'mapping',
    'maximum-dag',
    'mrcpsp',
    'nfc',
    'oocsp_racks',
    'prize-collecting',
    'rcpsp-wet',
    'solbat',
    'tpp',
    'zephyrus-2016',
  ],
  2017: [
    'cargo',
    'city-position',
    'crosswords',
    'community-detection',
    'gbac',
    'groupsplitter',
    'hrc',
    'jp-encoding',
    'mario',
    'ma-path-finding',
    'opd',
    'opt-cryptanalysis',
    'rcpsp-wet',
    'rel2onto',
    'road_construction',
    'routing-flexible',
    'steelmillslab',
    'tc-graph-color',
    'tdtsp',
    'traveling-tppv',
  ],
  2018: [
    'cargo',
    'concert-hall-cap',
    'elitserien',
    'gfd-schedule2',
    'largescheduling',
    'mapping',
    'neighbours',
    'on-call-rostering',
    'oocsp_racks',
    'opt-cryptanalysis',
    'proteindesign12',
    'racp',
    'rotating-workforce',
    'seat-moving',
    'soccer-computational',
    'steiner-tree',
    'team-assignment',
    'test-scheduling',
    'train',
    'vrplc',
  ],
  2019: [
    'accap',
    'amaze3',
    'code-generator',
    'fox-geese-corn',
    'groupsplitter',
    'hrc',
    'kidney-exchange',
    'liner-sf-repositioning',
    'lot-sizing',
    'median-string',
    'multi-knapsack',
    'nside',
    'ptv',
    'rcpsp-wet-diverse',
    'rotating-workforce',
    'stack-cuttingstock',
    'steelmillslab',
    'stochastic-vrp',
    'triangular',
    'zephyrus-2016',
  ],
  2020: [
    'bnn-planner',
    'cable-tree-wiring',
    'code-generator',
    'collaborative-construction',
    'gbac',
    'hoist-benchmark',
    'is',
    'lot-sizing',
    'minimal-decision-sets',
    'p1f-pjs',
    'pentominoes',
    'pillars-and-planks',
    'racp',
    'radiation',
    'sdn-chain',
    'skill_allocation',
    'soccer-computational',
    'stable-goods',
    'tower',
    'whirlpool',
  ],
  2021: [
    'atsp',
    'carpet-cutting',
    'community-detection-rnd',
    'flowshop-workers',
    'java-routing',
    'mapping',
    'monomatch',
    'MZNC_connect',
    'neighbours',
    'opt-cryptanalysis',
    'p1f-pjs',
    'peacable_queens',
    'pentominoes-zayenz',
    'perfect_square',
    'physician-scheduling',
    'seat-moving',
    'steiner-systems',
    'vrp-fs',
    'vrp-submission',
    'wmsmc-int',
    'yumi-dynamic',
  ],
  2022: [
    'accap',
    'arithmetic-target',
    'blocks-world',
    'diameterc-mst',
    'generalized-peacable-queens',
    'gfd-schedule2',
    'ma-path-finding',
    'nfc',
    'roster-sickness',
    'rotating-workforce-scheduling',
    'spot5',
    'stripboard',
    'sudoku_opt',
    'team-assignment',
    'tower',
    'traveling-tppv',
    'triangular',
    'vaccine',
    'wordpress',
    'yumi-static',
  ],
  2023: [
    'chessboard',
    'code-generator',
    'elitserien',
    'evm-super-compilation',
    'gametes',
    'kidney-exchange',
    'mrcpsp',
    'multi-agent-graph-coverage',
    'pennies-opt',
    'roster',
    'roster-shifts-bool',
    'speck-optimisation',
    'sudoku_fixed',
    'table-layout',
    'test-scheduling',
    'travelling-thief',
    'unit-commitment',
    'valve-network',
    'vrplc',
    'yumi-static',
  ],
}
